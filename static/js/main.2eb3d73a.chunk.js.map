{"version":3,"sources":["containers/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["MainContainer","props","className","src","alt","href","role","aria-labelledby","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mPAsDeA,G,UAlDO,SAACC,GACnB,OACG,yBAAKC,UAAU,WACX,yBAAKA,UAAU,QACV,yBAAKA,UAAU,eAAeC,IAAK,qBAAsBC,IAAI,KAC7D,wBAAIF,UAAU,SAAd,yBACA,yBAAKA,UAAU,SACX,qCAEJ,wBAAIA,UAAU,MAAd,oBACA,wBAAIA,UAAU,OAAd,2CACA,wBAAIA,UAAU,SAAd,kKAEA,wBAAIA,UAAU,WAAd,4BACA,yBAAKA,UAAU,cACX,iGAAiE,uBAAGG,KAAK,+BAAR,sBAAjE,KACA,4IACA,iKACA,kHAEJ,wBAAIH,UAAU,WAAd,iDACA,yBAAKA,UAAU,cACX,sEACA,8CACA,oEACA,kFAEJ,yBAAKA,UAAU,UACX,6EAA6C,0BAAMI,KAAK,MAAMC,kBAAgB,QAAjC,gBAA7C,KACA,6EAEJ,wBAAIL,UAAU,WAAd,MAA2B,uBAAGG,KAAK,6BAAR,UAA3B,KACA,yBAAKH,UAAU,cACX,2IACA,oJAEJ,wBAAIA,UAAU,WAAd,eACA,yBAAKA,UAAU,cACX,4CAAiB,uBAAGG,KAAK,2CAAR,YAAjB,gDACA,qFAAgD,uBAAGA,KAAK,gCAAR,WAAhD,oBACA,oGAAoE,uBAAGA,KAAK,mCAAR,kCC5BzEG,MAVf,WACE,OACE,oCACA,0BAAMN,UAAU,aAChB,kBAAC,EAAD,SCEgBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2eb3d73a.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nconst MainContainer = (props) => {\n    return (\n       <div className=\"wrapper\">\n           <div className=\"body\">\n                <img className=\"profile__pic\" src={\"assets/profile.png\"} alt=\"\"></img>\n                <h2 className=\"quote\">coffee, code and 808s</h2>\n                <div className=\"greet\">\n                    <h1>Hey!</h1>\n                </div>\n                <h2 className=\"me\">I'm Austin Vuong</h2>\n                <h2 className=\"uni\">Penultimate Software Engineering @ UNSW</h2>\n                <h2 className=\"intro\">An aspiring full stack engineer with a focus on front-end development currently.\n                When Iâ€™m not stuck in Visual Studio Code, I enjoy music and photography.</h2>\n                <h2 className=\"heading\">What am I busy with now?</h2>\n                <div className=\"text__body\">\n                    <h2>Iâ€™m working on a startup with some smart people. It's called <a href=\"http://papercutreceipts.com\">Papercut Receipts!</a> </h2>\n                    <h2>Other than that, Iâ€™m in my penultimate year for Software Engineering @ UNSW with a Distinction average.</h2>\n                    <h2>I also volunteer with KodeSkool where we strive to educate high school students with employable skills through our love for code.</h2>\n                    <h2>Oh, and I dabble in photography. Still learning but we all start somewhere right?</h2>\n                </div>\n                <h2 className=\"heading\">What languages do you spea... I mean code in?</h2>\n                <div className=\"text__body\">\n                    <h2>Loving React and Typescript currently.</h2>\n                    <h2>Java is great.</h2>\n                    <h2>Python and C too. Firebase is great!</h2>\n                    <h2>I have a positive relation(ship) with PostgreSQL.</h2>\n                </div> \n                <div className=\"cheeky\">\n                    <h2>*yep Iâ€™ll show myself out after that one <span role=\"img\" aria-labelledby=\"Door\">ðŸšª</span>*</h2>\n                    <h2>ps. I speak English and a bit of Vietnamese.</h2>\n                </div>\n                <h2 className=\"heading\">My <a href=\"http://github.com/austv99\">github</a>!</h2> \n                <div className=\"text__body\">\n                    <h2>Iâ€™m an eager individual who seeks to learn and, once I know what Iâ€™m doing, pass it on and teach!</h2>\n                    <h2>I love the challenges that come with new technologies and immerse myself with new opportunities every chance I get.</h2>\n                </div>\n                <h2 className=\"heading\">Contact me!</h2>\n                <div className=\"text__body\">\n                    <h2>Check out my <a href=\"http://www.linkedin.com/in/austin-vuong\">linkedin</a>! Feel free to connect and start up a convo!</h2>\n                    <h2>Or if youâ€™re after a more casual convo, Iâ€™m <a href=\"http://instagram.com/austv99\">austv99</a> on most socials</h2>\n                    <h2>Or if youâ€™re more traditional, reach out to me through email at <a href=\"mailto:austin.vuong00@gmail.com\">austin.vuong00@gmail.com</a></h2>\n                </div>\n           </div>\n        </div>\n    \n\n\n    );\n}\n\nexport default MainContainer;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport Main from './containers/MainContainer';\n// import {BrowserRouter as Router, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n    <body className=\"container\">\n    <Main />\n    </body>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}